name: Manual deployment for Terraform Infrastructure

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        description: asdfas
        type: string
      ENVIRONMENT:
        required: true
        description: asdfas
        type: string
    secrets:
      CLIENT_ID:
        required: true
        description: asdfas
      CLIENT_SECRET:
        required: true
        description: asdfas
      SUBSCRIPTION_ID:
        required: true
        description: asdfas
      TENANT_ID:
        required: true
        description: asdfas

jobs:
  deploy_development:
    runs-on: ubuntu-latest
    environment: development
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9

    - name: Terraform init
      id: init
      shell: bash
      run: |
        terraform init
      working-directory: ${{ inputs.ENVIRONMENT }}

    - name: Terraform plan
      id: plan
      shell: bash
      run: |
        terraform plan -out tf-${{ inputs.ENVIRONMENT }}-${GITHUB_SHA::7}.plan -input=false -lock=false
        tree
      working-directory: ${{ inputs.ENVIRONMENT }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'release' && github.event.action == 'published'
      shell: bash
      run: |
        terraform apply -input=false tf-${{ inputs.ENVIRONMENT }}-${GITHUB_SHA::7}.plan
      working-directory: ${{ inputs.ENVIRONMENT }}

  deploy_qa:
    runs-on: ubuntu-latest
    environment: qa
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9

    - name: Terraform init
      id: init
      shell: bash
      run: |
        terraform init
      working-directory: ${{ vars.ENVIRONMENT }}

    - name: Terraform plan
      id: plan
      shell: bash
      run: |
        terraform plan -out tf-${{ inputs.ENVIRONMENT }}-${GITHUB_SHA::7}.plan -input=false -lock=false
        tree
      working-directory: ${{ vars.ENVIRONMENT }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'release' && github.event.action == 'published'
      shell: bash
      run: |
        terraform apply -input=false tf-${{ inputs.ENVIRONMENT }}-${GITHUB_SHA::7}.plan
      working-directory: ${{ vars.ENVIRONMENT }}

  deploy_prod:
    runs-on: ubuntu-latest
    environment: production
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9

    - name: Terraform init
      id: init
      shell: bash
      run: |
        terraform init
      working-directory: ${{ vars.ENVIRONMENT }}

    - name: Terraform plan
      id: plan
      shell: bash
      run: |
        terraform plan -out tf-${{ inputs.ENVIRONMENT }}-${GITHUB_SHA::7}.plan -input=false -lock=false
        tree
      working-directory: ${{ vars.ENVIRONMENT }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'release' && github.event.action == 'published'
      shell: bash
      run: |
        terraform apply -input=false tf-${{ inputs.ENVIRONMENT }}-${GITHUB_SHA::7}.plan
      working-directory: ${{ vars.ENVIRONMENT }}